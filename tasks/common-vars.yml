- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
      skip: true

# python executable used to run get-pip, create virtualenvs
- name: Define amr_python_executable from internal vars if not explicitly defined
  ansible.builtin.set_fact:
    amr_python_executable: "{{ __amr_python_executable }}"
  when: amr_python_executable is not defined

# role package deps
- name: Define amr_role_package_deps from internal vars if not explicitly defined
  ansible.builtin.set_fact:
    amr_role_package_deps: "{{ __amr_role_package_deps }}"
  when: amr_role_package_deps is not defined


###########################################################
# Storage Service variables 
###########################################################
- name: Storage Service variables task block
  block:
    - name: Check that required variables are defined (storage service)
      assert:
        that:
          - vars[item] is defined
        fail_msg: "Variable {{ item }} needs to be defined"
      become: false
      loop:
        - amr_django_secret_key
        - amr_ss_db_password 

    - name: Define amr_ss_package_deps from internal vars if not explicitily defined
      ansible.builtin.set_fact:
        amr_ss_package_deps: "{{ __amr_ss_package_deps | list }}"
      when: 
        - amr_ss_packages_deps is not defined
        - amr_install_ss_package_deps | bool

    # - For simplicity and make it easy to grasp how the variables are defined
    #   we are not combining environment variables (unlike the ansible-archivematica-src
    #   role)
    # - For example: if amr_ss_environment is not defined in host_vars, we use the default value
    #   in vars/ (__amr_ss_environment) (i.e., one or the other, not a combination)

    - name: Define amr_ss_environment from internal vars if not explicitly defined
      ansible.builtin.set_fact:
        amr_ss_environment: "{{ __amr_ss_environment }}"
      when: amr_ss_environment is not defined
  when:  amr_install_ss|bool or  amr_configure_ss|bool


###########################################################
#  Pipeline related variables 
###########################################################
- name: Pipeline variables task block
  block:
    - name: Check that required variables are defined (pipeline)
      assert:
        that:
          - vars[item] is defined
        fail_msg: "Variable {{ item }} needs to be defined"
      become: false
      loop:
        - amr_django_secret_key
        - amr_pipeline_db_password 

    - name: Define amr_pipeline_repos from internal vars if not explicitily defined
      ansible.builtin.set_fact:
        amr_pipeline_repos: "{{ __amr_pipeline_repos | list }}"
      when: 
        - amr_pipeline_repos is not defined
        - amr_install_pipeline_repos | bool

    - name: Define amr_pipeline_package_deps from internal vars if not explicitily defined
      ansible.builtin.set_fact:
        amr_pipeline_package_deps: "{{ __amr_pipeline_package_deps | list }}"
      when: 
        - amr_pipeline_packages_deps is not defined
        - amr_install_pipeline_package_deps | bool

    # - For simplicity and make it easy to grasp how the variables are defined
    #   we are not combining environment variables (unlike the ansible-archivematica-src
    #   role)
    # - For example: if amr_dashboard_environment is not defined in host_vars, we use the default value
    #   in vars/ (__amr_dashboard_environment) (i.e., one or the other, not a combination)

    - name: Define amr_dashboard_environment from internal vars if not explicitly defined
      ansible.builtin.set_fact:
        amr_dashboard_environment: "{{ __amr_dashboard_environment }}"
      when: amr_dashboard_environment is not defined

    - name: Define amr_mcpserver_environment from internal vars if not explicitly defined
      ansible.builtin.set_fact:
        amr_mcpserver_environment: "{{ __amr_mcpserver_environment }}"
      when: amr_mcpserver_environment is not defined

    - name: Define amr_mcpclient_environment from internal vars if not explicitly defined
      ansible.builtin.set_fact:
        amr_mcpclient_environment: "{{ __amr_mcpclient_environment }}"
      when: amr_mcpclient_environment is not defined
  when:  amr_install_pipeline|bool or  amr_configure_dashboard|bool

###########################################################
#  Fixity related variables 
###########################################################

- name: Fixity variables task block
  block:
    - name: Check that required variables are defined (storage service)
      assert:
        that:
          - vars[item] is defined
        fail_msg: "Variable {{ item }} needs to be defined"
      become: false
      loop:
        - amr_fixity_ss_user
        - amr_fixity_ss_apikey

    - name: Define amr_fixity_package_deps from internal vars if not explicitily defined
      ansible.builtin.set_fact:
        amr_fixity_package_deps: "{{ __amr_fixity_package_deps | list }}"
      when: 
        - amr_fixity_packages_deps is not defined
        - amr_install_fixity_package_deps | bool
  when:  amr_install_fixity|bool
